#include <iostream>

const int MAX_SIZE = 100;

class Stack {
private:
    int top;
    int arr[MAX_SIZE];
public:
    Stack() {
        top = -1;
    }

    bool push(int value) {
        if (top >= MAX_SIZE - 1) {
            std::cout << "Stack overflow! Cannot push element " << value << std::endl;
            return false;
        } else {
            arr[++top] = value;
            return true;
        }
    }

    int pop() {
        if (top < 0) {
            std::cout << "Stack underflow! Cannot pop element." << std::endl;
            return -1;
        } else {
            return arr[top--];
        }
    }

    int peek() {
        if (top < 0) {
            std::cout << "Stack is empty. No top element to peek." << std::endl;
            return -1;
        } else {
            return arr[top];
        }
    }

    bool isEmpty() {
        return top < 0;
    }
};

int main() {
    Stack myStack;

    myStack.push(1);
    myStack.push(2);
    myStack.push(3);

    std::cout << "Top element: " << myStack.peek() << std::endl;

    std::cout << "Popped element: " << myStack.pop() << std::endl;
    std::cout << "Top element after pop: " << myStack.peek() << std::endl;

    std::cout << "Is the stack empty? " << (myStack.isEmpty() ? "Yes" : "No") << std::endl;

    return 0;
}
